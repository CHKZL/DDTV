name: Docker_Release

on:
  workflow_dispatch:
  release:
    types: [released]
  push:
    branches: [master]
    paths:
      - 'Docker/**'
      - '!Docker/**/README.md'
      - '!Docker/monitor/**'
      - '.github/workflows/Docker_Release.yml'
      - '.github/workflows/Docker_Build_Push.yml'

jobs:
  Prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Output Version
        id: version
        run: |
          Version=$(curl -sX GET "https://api.github.com/repos/CHKZL/DDTV/releases/latest" | awk '/tag_name/{print $4}' FS='["]')
          Version_major=$(echo "${Version%%.*}" | sed 's/[^0-9]//g')
          Version_minor=${Version#*.}
          echo ::set-output name=all::"${Version_major}.${Version_minor}"
          echo ::set-output name=two::"${Version_major}.${Version_minor%%.*}"
    outputs:
      verall: ${{ steps.version.outputs.all }} # all="3.0.1.9"
      vertwo: ${{ steps.version.outputs.two }} # two="3.0"
      DOTNET_VERSION: '6.0'
      DOCKER_DIR: ./Docker
      PLATFORMS: linux/amd64, linux/arm64, linux/arm/v7
      DEPS_REPO: ddtv/deps
      CLI_REPO: ddtv/cli
      BACK_END_REPO: ddtv/webserver
      FRONT_END_REPO: ddtv/webui
# *_REPO 为仓库名兼路径名，更改后记得修改 文件存放位置、prepare.GitHubActions.sh、Docker_Build_Push.yml、Update_description_of_container_repo.yml

# jobs.<job_id>.with.<with_id>上下文不支持env, 仅支持 github, needs
  WEBUI_nginx-alpine:
    if: false
    needs: [Prepare]
    secrets: inherit
    uses: ./.github/workflows/Docker_Build_Push.yml
    with:
      repo:       ${{ needs.Prepare.outputs.FRONT_END_REPO }}
      os_id:      alpine
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      platforms:  linux/amd64, linux/arm64, linux/arm/v7, linux/386, linux/arm/v6, linux/ppc64le, linux/s390x
      docker-dir: ${{ needs.Prepare.outputs.DOCKER_DIR }}
      build-args: REPO=nginx:stable-alpine

# alpine
  Deps_alpine:
    needs: [Prepare]
    secrets: inherit
    uses: ./.github/workflows/Docker_Build_Push.yml
    with:
      repo:       ${{ needs.Prepare.outputs.DEPS_REPO }}
      os_id:      alpine
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      platforms:  ${{ needs.Prepare.outputs.PLATFORMS }}
      docker-dir: ${{ needs.Prepare.outputs.DOCKER_DIR }}
      build-args: REPO=mcr.microsoft.com/dotnet/aspnet:${{ needs.Prepare.outputs.DOTNET_VERSION }}-alpine

  CLI_alpine:
    needs: [Prepare, Deps_alpine]
    secrets: inherit
    uses: ./.github/workflows/Docker_Build_Push.yml
    with:
      repo:       ${{ needs.Prepare.outputs.CLI_REPO }}
      os_id:      alpine
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      platforms:  linux/amd64 # ${{ needs.Prepare.outputs.PLATFORMS }}
      docker-dir: ${{ needs.Prepare.outputs.DOCKER_DIR }}
      build-args: REPO=ghcr.io/chkzl/${{ needs.Prepare.outputs.DEPS_REPO }}:alpine

  WEBServer_alpine:
    needs: [Prepare, Deps_alpine]
    secrets: inherit
    uses: ./.github/workflows/Docker_Build_Push.yml
    with:
      repo:       ${{ needs.Prepare.outputs.BACK_END_REPO }}
      os_id:      alpine
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      platforms:  linux/amd64 # ${{ needs.Prepare.outputs.PLATFORMS }}
      docker-dir: ${{ needs.Prepare.outputs.DOCKER_DIR }}
      build-args: REPO=ghcr.io/chkzl/${{ needs.Prepare.outputs.DEPS_REPO }}:alpine

# debian
  Deps_debian:
    needs: [Prepare]
    secrets: inherit
    uses: ./.github/workflows/Docker_Build_Push.yml
    with:
      repo:       ${{ needs.Prepare.outputs.DEPS_REPO }}
      os_id:      debian
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      platforms:  ${{ needs.Prepare.outputs.PLATFORMS }}
      docker-dir: ${{ needs.Prepare.outputs.DOCKER_DIR }}
      build-args: REPO=mcr.microsoft.com/dotnet/aspnet:${{ needs.Prepare.outputs.DOTNET_VERSION }}

  CLI_debian:
    needs: [Prepare, Deps_debian]
    secrets: inherit
    uses: ./.github/workflows/Docker_Build_Push.yml
    with:
      repo:       ${{ needs.Prepare.outputs.CLI_REPO }}
      os_id:      debian
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      platforms:  ${{ needs.Prepare.outputs.PLATFORMS }}
      docker-dir: ${{ needs.Prepare.outputs.DOCKER_DIR }}
      build-args: REPO=ghcr.io/chkzl/${{ needs.Prepare.outputs.DEPS_REPO }}:debian

  WEBServer_debian:
    needs: [Prepare, Deps_debian]
    secrets: inherit
    uses: ./.github/workflows/Docker_Build_Push.yml
    with:
      repo:       ${{ needs.Prepare.outputs.BACK_END_REPO }}
      os_id:      debian
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      platforms:  ${{ needs.Prepare.outputs.PLATFORMS }}
      docker-dir: ${{ needs.Prepare.outputs.DOCKER_DIR }}
      build-args: REPO=ghcr.io/chkzl/${{ needs.Prepare.outputs.DEPS_REPO }}:debian

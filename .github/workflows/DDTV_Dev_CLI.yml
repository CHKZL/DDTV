name: DDTV_Dev_CLI

on:
  push:
    branches-ignore:
      - 'master'
      - 'main'

jobs:
#第一个job，确认commit info是否是[dev]开头
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check-message.outputs.should-run }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Get the commit message
        id: get-commit-message
        run: echo "::set-output name=message::$(git log -1 --pretty=%B)"
      
      - name: Check if commit message starts with [dev]
        id: check-message
        run: |
          if [[ "${{ steps.get-commit-message.outputs.message }}" == "[dev]"* ]]; then
            echo "运行之后的工作流..."
            echo "::set-output name=should-run::true"
          else
            echo "跳过之后的工作流..."
            echo "::set-output name=should-run::false"
          fi

  build:

    needs: check-commit
    if: needs.check-commit.outputs.should-run == 'true'

    strategy:
      matrix:
        os: 
          - ubuntu-latest
          - windows-latest
          - macOS-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use .NET 8.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: cd CLI && dotnet restore
  
      - name: Build
        run: cd CLI && dotnet build --no-restore --output build_output
  
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: DDTV-CLI-${{ matrix.os }}
          path: CLI/build_output
